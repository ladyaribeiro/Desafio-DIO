# PENSAMENTO COMPUTACIONAL

É O PROCESSO DE PENSAMENTO ENVOLVIDO NA EXPRESSÃO DE SOLUÇÕES EM PASSOS COMPUTACIONAIS OU ALGORITIMOS QUE PODEM SER IMPLEMENTADOS NO COMPUTADOR.

NÃO É UMA DISCIPLINA ACADÊMICA. É UMA HABILIDADE GENERALISTA: MATEMÁTICA, LEITURA E ESCRITA.

BASEADO EM 4 PILARES:

- DECOMPOSIÇÃO: DIVIDIR UM PROBLEMA COMPLEXO EM SEU SUBPROBLEMAS.
- RECONHECIMENTO DE PADRÕES: IDENTIFICAR PADRÕES OU TENDÊNCIAS, SIMILARIDADES E DIFERENÇA ENTRE OS PROBLEMAS, OU SEJA, PADRÃO COMPORTAMENTAL.
- ABSTRAÇÃO: EXTRAPOLAR O CONCEITO DO PROBLEMA PARA UMA FORMA GENERALISTA; POO: CLASSES, MÉTODOS, HERANÇA, POLIFORMISMO. 
- DESIGN DE ALGORITIMOS: AUTOMATIZAR, DEFINIR PASSO A PASSO A SOLUÇÃO DO PROBLEMA.

OVERVIEW: 

PROCESSO CONTINUO, DEFINIR SOLUÇÃO, TESTAR SOLUÇÃO E APERFEIÇOAMENTO DA SOLUÇÃO ENCONTRADA. REPEAT: RACIOCIONIO LOGICO, DECOMPOSIÇÃO, PADRÕES, ABTRAÇÃO, ALGORITIMO, REFINAMENTO E REPAT.

1. CS + MATH: DESENVOLVIMENTO E ABSRAÇÃO; RECONHECIMENTO DOS PADRÕES.
2. CS + SCI/ENG: ANÁLISE DE DADOS E DESING DE SOLUÇÕES; DEFINIÇÃO E USO DE ABSTRAÕES; TESTE E REFINAMENTO DE ALGORÍTIMOS. 
3. CS + SCI/ENG + MATH: MODELAGEM; DEFINIÇÃO DE PROBLEMAS; DEFINIÇÃO DE ABSTRAÇOES; RECONHECIMENTO DE PADRÕES; 
4. MATH + SCI/ENG: DESENVOLVIMENTO E ABSTRAÇÃO; RECONHECIMENTO DE PADRÕES.

# HABILIDADES COMPLEMENTARES

RACIOCÍNIO LÓGICO E APERFEIÇOAMENTO.

RACIOCÍNIO LÓGICO É UMA FORMA DE PENSAMENTO ESTRUTURADO, QUE PERMITE ENCONTRAR A CONCLUSÃO OU DETERMINAR A RESOLUÇÃO DE UM PROBLEMA. CLASSIFICAÇÃO:

- INDUÇÃO: LEIS E TEORIAS. INDUZ QUE ALGO ACONTEÇA A PARTIR DE UMA INDUÇÃO. MUITO RELACIONADO À CIÊNCIAS EXPERIMENTAIS. 
- DEDUÇÃO: JUSTAMENTE O INVERSO DE INDUÇÃO. MUITO UTILIZADO NAS CÊNCIAS EXATAS. 
- ABDUÇÃO: A PARTIR DA CONCLUSÃO. PROCESSO INVESTIGATIVO OU DIAGNÓSTICO. EX: A GRAMA ESTA MOLHADA, LOGO DEVE TER CHOVIDO.

INFERÊNCIA: SINTÉTICA - ABDUÇÃO
		       - INDUÇÃO

	     ANALITICA - DEDUÇÃO

APERFEIÇOAMENTO: MELHORAMENTO, APRIMORAMENTO, REFINAMENTO, ATO DE APERFEIÇOAR - A PARTIR DE UMA SOLUÇÃO, DETERMINAR PRONTOS DE MELHORA E REFINAMENTO.

• ENCONTRAR SOLUÇÃO EFICIENTE E OTIMIZAR PROCESSOS - MLEHOR USO DE RECURSOS
• SIMPLIFICAR LINHAS DE CÓDIGOS, FUNÇÕES BEM DEFINIDAS - MELHORAR CÓDIGOS E ALGORITMOS.

# PILARES: DECOMPOSIÇÃO

PRIMEIRO PASSO DA RESOLUÇÃO DE PROBLEMAS DENTRO DO CONCEITO COMPUTACIONAL.

ESTRATÉGIA: PROCESSO DE QUEBRAR E DETERMINAR PARTES MENORES E GERENCIAVEIS - ESTUDAR, EXPLORAR, REALIZAR EXAME BEM DETALHADO, BUSCAR MELHORIAS.

COMBINAR OS ELEMENTOS RECOMPONDO O PROBLEMA ORIGINAL: SÍNTESE - PROCESSO DE RECONSTRUÇÃO, FUNDIR OS ELEMENTOS DE MANEIRA COERENTE, DANDO SENTINDO A SOLUÇÃO.

ORDEM DE EXECUÇÃO DE TAREFAS MENORES: SEQUENCIAL - DEPENDÊNCIA ENTRE TAREFAS OU EM FILA.  PARALELISMO: EXECUTADAS PARALELAMENTE: - TEMPO.

COMO DECOMPOR? IDENTIFICAR OU COLETAR DADOS > AGREGA OS DADOS > FUNCIONALIDADE.

EXEMPLO SEQUENCIAL OU PARALELO: ARTIGO
- O QUE SERÁ ABORDADO?
- ESTRUTURA
- CONTEÚDO DE CADA TÓPICO
- TEXTO DE CONEÇÃO

EVITA REPETIÇÃO.

# PILARES: PADRÕES

MODELO BASE, ESTRUTURA VARIANTE, REPETIÇÃO.

EXEMPLO: REDES SOCIAIS. 

# PILARES: ABSTRAÇÃO

PROCESSO INTELECTUAL DE ISOLAMENTO DE UM OBJETO DA REALIDADE. GENERALIZAR: TORNAR-SE GERAL, MAIS AMPLO E EXTENSO. NA LÓGICA, É UMA OPERAÇÃO INTELECTUAL QUE CONSISTE EM REUNIR UMA CLASSE GERAL, UM CONJUNTO DE SERES OU FENÔMENOS. COMO CLASSIFICAR? CARACTERISTICAS, PONTOS ESSENCIAIS, GENERALIZAR X DETALHE.

# PILARES: ALGORÍTMO 

ENERGIA, TRABALHADOR, EFICIENCIA E RAPIDEZ. PORÉM, NÃO OPERA SOZINHO. É NECESSÁRIO OPERAR INSTRUÇÕES DETALHADAS, ONDE SÃO UTILIZADAS PARA O PROCESSAMENTO DOS DADOS ATRAVÉS DOS PROGRAMAS.

PROCESSO DE RESOLUÇÃO: STEP BY SETP - PASSO A PASSO.

DESENVOLVIMENTO DO PROGRAMA: 
1. ANÁLISE: ESTUDO E DEFINIÇÃO DE ENTRADA E SAÍDA.
2. ALGORITIMO: DESCREVE O PROGRAMA POR MEIO DE FERRAMENTAS NARRATIVAS, FLUXOGRAMA OU PSEUDOCÓDIGO.
3. CODIGIFAÇÃO: O ALGORITIMO É CODIFICADO DE ACORDO COM A LINGUAGEM DE PROGRAMAÇÃO.

COMO CONSTRUIR UM ALGORITIMO?

1. COMPREENÇÃO DO PROBLEMA.
2. DEFINIÇÃO DADOS DE ENTRADA.
3. DEFINIR PROCESSAMENTO.
4. DEFINIR OS DADOS DE SAÍDA.
5. UTILIZAR MÉTODO DE CONSTRUÇÃO.
6. TESTE E DIAGNOSTICO.

NARRATIVA: SEM CONCEITOS, DIVERSAS INTERPRETAÇÕES POSSÍVEIS. 
FLUXOGRAMA: ESTRUTURA GRÁFICA ONDE TEM SIMBOLOS PREDEFINIDOS. CONHECIMENTO PRÉVIO DA ESTRUTURA E SIMBOLOS.
PSEUDOCÓDIGO: PORTUGOL - MEIO TERMO.

# O QUE É LÓGICA?

ESTA FOCADA EM APRESENTAR O CONCEITO DE LÓGICA APLICADA À PROGRAMAÇÃO, COMO UM PROCESSO DE PENSAMENTO ATRELADO AO CONCEITO DE ALGORITIMOS E RESOLUÇÃO DE PROBLEMAS.

1. O QUE É? VEM PARA A SOLUÇÃO DE ALGUM PROBLEMAS. ORGANIZAÇÃO E PLANEJAMENTO DAS INSTRUÇÕES, ASSERTIVAS EM ALGORITIMO. AFIM DE VIABILIZAR A IMPLANTAÇÃO DE UM PROGRAMA.

2. TÉCNICAS DE LÓGICA DE PROGRAMAÇÃO: 

LINEAR - MODELO TRADICIONAL; NÃO TEM VINCULO, ESTRUTURA HIERÁRQUICA, PROGRAMAÇÃO DE COMPUTADORES. EXECUÇÃO SEQUENCIADA, UTILIZANDO BASTANTE A MATEMÁTICA. TEM OS RECURSOS LIMITADOS. EX: ACORDA, DESCE ESCADA, PREPARA O CAFÉ > TOMA CAFÉ.

ESTRUTURADA - ORGANIZAÇÃO, DISPOSIÇÃO E ORDEM DOS ELEMENTOS ESSENCIAIS QUE COMPOEM O CORPO. OBJETIVO: ESCRITA, ENTENDIMENTO, VALIDAÇÃO E MANUTENÇÃO (FACILITADOR). EX: ACODAR, FAZER O CAFÉ OU FAZ O SUCO, APÓS ISSO TOMA O CAFÉ. 

MODULAR - NÓS DEFINIMOS PARTES INDEPENDENTES ONDE SÃO CONTROLADOS POR  UM CONJUNTO DE REGRAS, E CADA MÓDULO TEM O CONSJUNTO DE REGRAS.  METAS: SIMPLIFICAÇÃO, DECOMPOR O PROBLEMA, VERIFICAÇÃO POR MÓDULO. EX: MODULO PREPARAR ACORDAR > MÓDULO PREPARAR A BEBIDA > MÓDULO TOMAR CAFÉ DA MANHÃ.

# FUNDAMENTO DE ALGORITIMOS:

QUAL A FUNÇÃO DO COMPUTADOR? PROCESSAR A INFORMAÇÃO QUE PASSAMOS PARA ELE. INFORMAÇÃO: 
DADOS (PRIMITIVOS: NÚMERICOS (INTEIROS E REAIS), 
CARACTERER (TUDO AQUILO QUE NÃO REPRESENTAMOS COM O NÚMERO) 
E LÓGICOS: BOOLEANO, SENDO VERDADEIRO OU FALSO - TIPO LÓGICO) 
OU INSTRUÇÕES (NORMATIVAS).

O que é uma variável? É um tipo de estrutura mutavel, onde pode variar o valor, sendo assim inconstante, podendo receber mais de um valor. Modificando assim o seu conteúdo. Pode assumir qualquer um dos valores determinados de um determinado conjunto de valores.

• REGRAS: ATRIBUIÇÃO DE UM OU MAIS CARACTERES; Preimeira letrea - não número; Sem espaços em brancos; Vedado a utilização de palavras reservadas; 

Papeis de uma variável: Ação - Modifica o estado do algoritimo/controle; Controle - Viagiada, para controle de alguma estrutura.

# INSTRUÇÕES PRIMITIVAS

SÃO LINGUAGENS DE PALAVRAS-CHAVES (VOCUABULARIO) DE UMA DETERMINADA PROGRAMAÇÃO QUE TEM POR FINALIDADE COMANDAR UM COMPUTADOR QUE IRÁ TRATAR OS DADOS.

# ESTRUTURA CONDICIONAIS E OPERADORES

CONDIÇÃO -> OPERAÇÃO

SIMPLES: APENAS VERIFICA SE A CONDIÇÃO FOI SATISFEITA.
COMPOSTA: SE NÃO FOI SATISFEITA, JOGA UMA EXCESSÃO.
ENCADEADA: SE, SE NÃO. É UMA SUCESSÃO DE ESTRUTURAS CONDICIONAIS.

OPERADORES RELACIONAIS:

= IGUAL A
<> DIFERENTE DE
> MAIOR QUE 
< MENOR QUE
>= MAIOR OU IGUAL A
<= MENOR OU IGUAL A
 
# ESTRUTURA DE REPETIÇÃO

LAÇOS; CONTROLE DE FLUXO; MALHAS DE REPETIÇÃO; REPETIÇÃO; LOOP

CONDIÇÃO DE PARADA: NÚMERO DE REPETIÇÕES PRE-FIXADO OU POR UMA CONDIÇÃO A SER SATISFEITA.

QUAL A VANTAGEM DE UTILIZAR UMA ESTRUTURA DE REPETIÇÃO? REDUÇÃO DE LINHAS, COMPREENSÃO FACILITADA, REDUÇÃO DE ERRO, CÓDIGO LIMPO.

# VETORES E MATRIZES

UM VETORES É UMA VÁRIAVEL QUE POSSUI UMA SEQUENCIA, UM TAMANHO PRE-FIXADO QUE IRÁ RECEBER EM VALORES. VISTO COMO CONTAINER OU UMA MATRIZ.

MATRIZ: É UMA TABELA ORGANIZADA EM LINHAS E COLUNAS NO FOMRATO M (LINHAS HORIZONTAIS) X N (NÚMEROS DE COLUNA NA VERTICAL).

NÚMERICOS: INTEIROS E REAIS.

# O QUE SÃO FUNÇÕES?


MODULARIZAÇÃO DO PROGRAMA > CÓDIGO MAIS CLARO E CONCISO > REUTILIZAÇÃO DE INSTRUÇÕES. 

SÃO BLOCOS DE INSTRUÇÕES, IDENTIFICADOS POR NOMES E PARÂMETROS. DEFINIÇÃO, NOME, INVOCAÇÃO, VARIÁVEL LOCAL. 

# INSTRUÇÕES DE ENTRADA E SAÍDA

CONSISTE NA INSERÇÃO E RECEBIMENTO DE DADOS DO MUNDO REAL, POR MEIO DE UMA INTERFACE, SEJA TECLADO, MOUSE, ARQUIVOS... 

RECEBER DADOS E IMPRIMIR DADOS.

OS FORMATOS PODEM VARIR DESDE SIMPLES ARQUIVOS BINÁRIOS ATÉ COMPLEXAS QUERYS.

EXISTEM DOIS TIPOS DE SAIDAS DENTRO DE UM PROGRAMA: SAÍDA PROGRAMADA - CONDICIONAL OU NÃO, QUANDO É CONDICIONAL AGUARDA O DISPOSITIVO AGUARDANDO PARA A SAÍDA DE VALORES.

# CARACTERISTICAS DE UM PROGRAMA

CARACTERISTICAS: 

LEGEBILIDADE - FACILIDADE NA LEITURA, COMPREENSÃO, ORTOGABILIDADE (COERÊNCIA NAS INSTRUÇÕES), DEFINIÇÃO ADEQUADA DAS ESTRUTURAS; 

REDIGIBILIDADE - SIMPLICIDADE NA ESCRITA (COERÊNCIA NAS INSTRUÇÕES); REUSO DO CÓDIGO, EXPRESSIVIDADE. PODE CONFLITAR COM A LEGIBILIDADE; 

CONFIABILIDADE -  VERIFICAÇÃO DE TIPOS, TRATA EXCEÇÕES, USO DE PONTEIROS, COMPATIBILIDADE ENTRE COMPILADORES; 

CUSTO - TREINAMENTO, CODIFICAÇÃO, COMPILAÇÃO, EXEXUÇÃO, INFRA-ESTRUTURA. EM RESUMO, ANÁLISE DE IMPACTO.

OUTRAS CARACTERISTICAS: ATUALIZAÇÕES, USO PARA I.A, DISPONIBILIDADE DE FERRAMENTAS, COMUNIDADE ATIVA, ADORAÇÃO PELO MERCADO.

# ANÁLISE DE CÓDIGO

ANÁLISE LEXICA (SCANER OU LEITURA)

PARTICIONAR ELEMENTOS DENOMINADOS TOKENS > CLASSIFICAR ELEMENTOS: IDENTIFICADORES, PALAVRAS RESERVADAS, NÚMEROS, STRINGS> ELIMINAR O QUE NÃO É NECESSÁRIO.

ANÁLISE SINTÁTIA: 

SINTAXE: COMPONETE DO SISTEMA LINGUISTICO QUE INTERLIGA OS CONSTITUENTES DA SENTENÇA, ATRIBUINDO A ESTRUTURA. 

ANÁLISE SEMANICA: 

É O ESTUDO DO SIGNIFICADO. INDICE SOBRE A RELAÇÃO ENTRE SIGNIFICANTES: PALAVRAS, FRASES, SINAIS E SÍMBOLOS.

ERRO DE SEMANTICA: NÃO FAZ O QUE É ESPERADO. 

# PARADIGMAS DE PROGRAMAÇÃO:

O QUE É? FORMA DE RESOLUÇÃO DE PROBLEMAS COM DIRfETRIZES E LIMRAÇÕES ESPECIFICAS DE CADA PARADIGMA UTIRILIZANDO LINGUAGEM DE PROGRAMAÇÃO.

CLASSIFICAÇÃO: ORIENTAÇÃO À OBJETO; PROCEDURAL; FUNCIONAL; ESTRUTURADO; COMPUTAÇÃO DISTRIBUIDA; LÓGICO.

ESTRUTURADO: PROBLEMAS SIMPLES E DIRETOS; APRENDER PROGRAMAÇÃO.



















































 


 





  
































